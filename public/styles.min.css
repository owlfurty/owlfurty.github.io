@charset "UTF-8";
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline; }

html {
  line-height: 1; }

ol, ul {
  list-style: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle; }

q, blockquote {
  quotes: none; }

q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none; }

a img {
  border: none; }

article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

html {
  box-sizing: border-box;
  outline: 0 !important;
  font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  tap-highlight-color: transparent; }

*,
*:before,
*:after {
  box-sizing: inherit;
  outline: 0 !important;
  font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  tap-highlight-color: inherit; }

@font-face {
  font-family: "gilroylight";
  src: url("fonts/gilroy_light_macroman/gilroy-light-webfont.eot");
  src: url("fonts/gilroy_light_macroman/gilroy-light-webfont.eot?#iefix") format("embedded-opentype"), url("fonts/gilroy_light_macroman/gilroy-light-webfont.woff") format("woff"), url("fonts/gilroy_light_macroman/gilroy-light-webfont.ttf") format("truetype"), url("fonts/gilroy_light_macroman/gilroy-light-webfont.svg#gilroylight") format("svg"); }

@font-face {
  font-family: "gilroyextrabold";
  src: url("fonts/gilroy_extrabold_macroman/gilroy-extrabold-webfont.eot");
  src: url("fonts/gilroy_extrabold_macroman/gilroy-extrabold-webfont.eot?#iefix") format("embedded-opentype"), url("fonts/gilroy_extrabold_macroman/gilroy-extrabold-webfont.woff") format("woff"), url("fonts/gilroy_extrabold_macroman/gilroy-extrabold-webfont.ttf") format("truetype"), url("fonts/gilroy_extrabold_macroman/gilroy-extrabold-webfont.svg#gilroyextrabold") format("svg"); }

.animate-title {
  margin-right: 18px;
  margin-top: 100px;
  display: inline-block;
  vertical-align: top;
  opacity: 0;
  box-sizing: border-box;
  transition: all 1s ease; }

.animate-title h2 {
  background-color: #18181a;
  padding: 30px;
  color: #f1f1f1;
  font-style: italic; }

.animate-title p {
  min-height: 200px;
  background-color: #f2f2f2;
  padding: 30px;
  line-height: 1.6em; }

/* Bounce Key Frames */

@keyframes bounce {
  0% {
    transform: translateY(0); }
  25% {
    transform: translateY(100%); }
  50% {
    transform: translateY(0%); }
  75% {
    transform: translateY(50%); }
  100% {
    transform: translateY(0%); } }

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility; }

html {
  font-size: 62.5%; }

body {
  font-size: 1.5rem;
  line-height: 1.6;
  font-weight: 400;
  font-family: "gilroylight";
  color: #34363E;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  overflow-x: hidden; }

a {
  text-decoration: none;
  cursor: pointer; }

canvas {
  display: block;
  position: absolute;
  height: 100%;
  z-index: -999; }

header {
  position: fixed;
  z-index: 3;
  height: 150px;
  width: 100%;
  top: 0;
  left: 0;
  background: rgba(255, 255, 255, 0);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Force Hardware Acceleration */
  transform: translateZ(0);
  backface-visibility: hidden;
  transition: transform 0.3s; }
  header.sticky {
    transition: all 0.3s;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
    background: white;
    height: 60px; }
    header.sticky .pt-main-nav {
      transition: all 0.3s;
      height: 100%;
      line-height: 60px; }
    header.sticky .pt-logo {
      transition: all 0.3s;
      transform: translatey(0); }
      header.sticky .pt-logo img {
        margin-top: 10px;
        max-width: 60%; }
  header.nav-is-visible {
    transform: translateX(-260px); }
  header::before {
    /* never visible - this is used in jQuery to check the current MQ */
    display: none;
    content: 'mobile'; }
  @media only screen and (min-width: 1170px) {
    header {
      height: 150px; }
      header.nav-is-visible {
        transform: translateX(0); }
      header::before {
        content: 'desktop'; } }

.hero {
  height: 100vh;
  width: 100%;
  display: table;
  text-align: center; }
  .hero .title {
    display: table-cell;
    vertical-align: middle; }
    .hero .title h1 {
      font-family: "gilroyextrabold";
      font-size: 5rem;
      line-height: 1.2em;
      max-width: 580px;
      margin: auto;
      letter-spacing: -1.25px; }

.pt-logo {
  transition: all 0.3s;
  display: inline-block;
  height: 100%;
  /* remove jump on iOS devices - when we fire the navigation */
  transform: translatey(29px);
  backface-visibility: hidden; }
  .pt-logo img {
    transition: all 0.3s;
    display: block;
    max-width: 100%;
    margin-top: 14px; }
  @media only screen and (min-width: 1170px) {
    .pt-logo {
      position: absolute;
      z-index: 2; } }

.pt-nav-trigger {
  cursor: pointer;
  display: block;
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  width: 50px;
  /* hide text */
  overflow: hidden;
  white-space: nowrap;
  color: transparent; }
  .pt-nav-trigger span {
    /* hamburger icon created in CSS */
    position: absolute;
    height: 2px;
    width: 20px;
    top: 50%;
    margin-top: -1px;
    left: 50%;
    margin-left: -10px;
    transition: background-color 0.3s 0.3s;
    background-color: #34363E; }
    .pt-nav-trigger span::before, .pt-nav-trigger span::after {
      /* upper and lower lines of the menu icon */
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      background-color: #34363E;
      /* Force Hardware Acceleration */
      transform: translateZ(0);
      backface-visibility: hidden;
      transition: transform 0.3s 0.3s; }
    .pt-nav-trigger span::before {
      transform: translateY(-6px); }
    .pt-nav-trigger span::after {
      transform: translateY(6px); }
  .nav-is-visible .pt-nav-trigger span {
    background-color: rgba(255, 255, 255, 0); }
    .nav-is-visible .pt-nav-trigger span::before {
      transform: translateY(0) rotate(-45deg); }
    .nav-is-visible .pt-nav-trigger span::after {
      transform: translateY(0) rotate(45deg); }
  @media only screen and (min-width: 1170px) {
    .pt-nav-trigger {
      display: none; } }

.pt-main-nav {
  transition: all 0.3s;
  position: fixed;
  z-index: 1;
  top: 0;
  right: 0;
  width: 260px;
  height: 100vh;
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  visibility: hidden;
  background: white; }
  .pt-main-nav a {
    display: block;
    font-size: 1.3rem;
    border-bottom: 1px solid #52545C;
    color: #34363E;
    transition: transform 0.3s, opacity 0.3s; }
  .pt-main-nav li ul {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    transition: transform 0.3s;
    transform: translateX(260px); }
  .pt-main-nav.nav-is-visible {
    visibility: visible;
    transition: visibility 0s 0s; }
  .pt-main-nav.moves-out > li > a {
    /* push the navigation items to the left - and lower down opacity - when secondary nav slides in */
    transform: translateX(-100%);
    opacity: 0; }
  .pt-main-nav.moves-out > li > ul {
    transform: translateX(0); }
  .pt-main-nav .go-back a {
    padding-left: 2em; }
    .pt-main-nav .go-back a::before, .pt-main-nav .go-back a::after {
      /* arrow goes on the left side - go back button */
      left: 20px;
      transform-origin: 1px 50%; }
  @media only screen and (min-width: 1170px) {
    .pt-main-nav {
      position: static;
      visibility: visible;
      width: 100%;
      height: 150px;
      line-height: 150px;
      /* padding left = logo size + logo left position*/
      background: transparent;
      text-align: right; }
      .pt-main-nav li {
        display: inline-block;
        height: 100%; }
      .pt-main-nav li a {
        display: inline-block;
        line-height: 1;
        font-size: 1.5rem;
        text-transform: uppercase;
        border-bottom: none;
        font-family: "gilroyextrabold";
        margin-left: 2em;
        /* Prevent .pt-subnav-trigger flicker is Safari */
        transform: translateZ(0);
        backface-visibility: hidden;
        transition: all 0.3s; }
      .pt-main-nav li a:not(.pt-subnav-trigger):hover {
        backface-visibility: hidden;
        color: #239A87; } }

.pt-main-content::before {
  /* never visible - this is used in jQuery to check the current MQ */
  display: none;
  content: 'mobile'; }
  @media only screen and (min-width: 1170px) {
    .pt-main-content::before {
      content: 'desktop'; } }

.pt-main-content {
  position: relative;
  z-index: 2;
  min-height: 100vh;
  transition: transform 0.3s; }
  .pt-main-content.nav-is-visible {
    transform: translateX(-260px); }
  @media only screen and (min-width: 1170px) {
    .pt-main-content.nav-is-visible {
      transform: translateX(0); } }

.playbutton {
  display: block;
  height: 102px;
  width: 102px;
  background: rgba(35, 154, 135, 0);
  border-radius: 50%;
  margin: 3em auto; }

.animate-reveal {
  opacity: 0;
  animation: reveal 1400ms cubic-bezier(1, 1, 1, 1) 1 normal forwards; }

.animate-headline {
  animation-delay: 2800ms; }

.animate-play {
  animation-delay: 3800ms; }

@keyframes reveal {
  0% {
    opacity: 0;
    transform: translateY(10%); }
  100% {
    opacity: 1;
    transform: translateY(1); } }

@keyframes fadeIn {
  from {
    transform: scale(0); }
  to {
    transform: scale(1); } }

@keyframes spin {
  to {
    transform: rotate(360deg); } }

.stroke-dotted {
  opacity: 0;
  stroke-dasharray: 1,5;
  stroke-width: 1.2px;
  fill: rgba(35, 154, 135, 0.01);
  transform-origin: 50% 50%;
  animation: spin 5s infinite linear;
  transition: opacity 1s ease, stroke-width 1s ease; }

.stroke-solid {
  stroke-dashoffset: 0;
  stroke-dashArray: 300;
  stroke-width: 2px;
  transition: stroke-dashoffset 1s ease, opacity 1s ease; }

.icon {
  transform-origin: 50% 50%;
  transition: transform 20ms ease-out;
  transition: stroke-dashoffset 1s ease, all 1s ease;
  transform: translateY(10%); }

#play:hover .stroke-dotted {
  stroke-width: 1.5px;
  opacity: 1; }

#play:hover .stroke-solid {
  opacity: 0;
  stroke-dashoffset: 100; }

#play:hover .icon {
  transform: translateY(10%); }

#play {
  cursor: pointer; }

.overlay {
  width: 100%;
  height: 100vh;
  background: black;
  position: fixed;
  z-index: 23333333;
  top: 0;
  opacity: 0;
  left: -100%;
  transition: opacity 1.5s;
  -webkit-transition: opacity 1.5s; }

.video-container {
  width: 95%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -webkit-transform: translate(-50%, -50%); }

.close {
  width: 20px;
  fill: white;
  position: absolute;
  right: 0;
  top: -30px; }

.close:hover {
  fill: rgba(255, 255, 255, 0.5);
  cursor: pointer; }

.show {
  opacity: 1; }

.features {
  text-align: center; }
  .features h2 {
    margin-top: 170px;
    font-size: 7.2rem;
    font-family: "gilroyextrabold";
    max-width: 600px;
    line-height: 1.2em;
    display: inline-block;
    color: #239A87;
    letter-spacing: -1.8px; }
    .features h2::after {
      content: '';
      background: #239A87;
      display: block;
      height: 4px;
      width: 22px;
      margin: 34px auto 60px; }
  .features aside,
  .features figure {
    text-align: left; }
    .features aside h3,
    .features figure h3 {
      color: #34363E;
      font-size: 2.8rem;
      letter-spacing: -0.7px;
      line-height: 2.8rem;
      font-family: "gilroyextrabold";
      margin-bottom: 1rem; }
    .features aside p,
    .features figure p {
      font-size: 1.8rem;
      letter-spacing: -0.45px;
      line-height: 2.8rem;
      margin-bottom: 3rem; }
  .features aside {
    max-width: 46%; }
  .features figure {
    transform: translateY(-1%); }

.testimonials-quotes-list {
  padding-top: 9px;
  padding-bottom: 74px;
  border-top: 1px solid #ededed; }
  .testimonials-quotes-list .quote-list {
    display: -ms-flexbox;
    display: flex;
    max-width: 1280px;
    margin: auto;
    padding-right: 30px;
    padding-left: 30px;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    -ms-flex-pack: justify;
    justify-content: space-between; }
    .testimonials-quotes-list .quote-list .quote-item {
      margin-top: 68px;
      -ms-flex-preferred-size: 47%;
      flex-basis: 47%;
      -ms-flex-negative: 0;
      flex-shrink: 0;
      color: #181818;
      font-size: 18px;
      font-weight: 400;
      line-height: 145%;
      text-align: left; }
      .testimonials-quotes-list .quote-list .quote-item .quote {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-pack: justify;
        justify-content: space-between; }
        .testimonials-quotes-list .quote-list .quote-item .quote blockquote {
          padding-left: 20px;
          position: relative; }
          .testimonials-quotes-list .quote-list .quote-item .quote blockquote::before {
            top: -16px;
            content: "";
            color: #ebebeb;
            font-size: 47px;
            width: 65px;
            height: 67px;
            position: absolute;
            background: url(images/quo.png);
            background-size: 65px 67px;
            left: -5px;
            z-index: -1; }
          .testimonials-quotes-list .quote-list .quote-item .quote blockquote p {
            color: #212121;
            font-size: 18px;
            font-weight: 400;
            line-height: 150%;
            width: 100%; }
        .testimonials-quotes-list .quote-list .quote-item .quote .person {
          margin-top: 9px;
          -ms-flex-preferred-size: 110px;
          flex-basis: 110px;
          -ms-flex-negative: 0;
          flex-shrink: 0;
          color: #9e9e9e;
          font-size: 14px;
          font-weight: normal;
          line-height: 18px; }
          .testimonials-quotes-list .quote-list .quote-item .quote .person .company {
            display: block;
            color: #181818;
            font-weight: 600; }
          .testimonials-quotes-list .quote-list .quote-item .quote .person .name {
            margin-top: 10px;
            display: block; }
          .testimonials-quotes-list .quote-list .quote-item .quote .person .figcaption {
            line-height: 17px; }

.flying-products {
  background: #34363E url(images/pattern.png);
  background-size: 50%;
  min-height: 120vh;
  text-align: center;
  position: relative; }
  .flying-products .bigbutton {
    display: inline-block;
    position: absolute;
    bottom: 5em;
    width: 358px;
    height: 102px;
    border-radius: 100px;
    background: rgba(0, 0, 0, 0.6);
    line-height: 102px;
    left: 50%;
    margin-left: -179px;
    font-family: "gilroyextrabold";
    font-size: 2.4rem;
    color: white;
    border: 2px solid white;
    transition: all 0.3s; }
    .flying-products .bigbutton:hover {
      background: black; }
  .flying-products img {
    position: absolute; }
    .flying-products img.product-one {
      width: 600px;
      left: 50%;
      margin-left: -300px;
      top: 28em; }
    .flying-products img.product-two {
      width: 560px;
      left: 56%;
      top: 45em; }
    .flying-products img.product-three {
      width: 400px;
      left: 16%;
      top: 40em; }
  .flying-products h2 {
    margin-top: 200px;
    font-size: 7.2rem;
    font-family: "gilroyextrabold";
    max-width: 10em;
    line-height: 1.2em;
    display: inline-block;
    color: white;
    letter-spacing: -1.8px; }
    .flying-products h2::after {
      content: '';
      background: white;
      display: block;
      height: 4px;
      width: 22px;
      margin: 34px auto 60px; }

.map-partners {
  background: white url(images/map.jpg) no-repeat center 400px;
  background-size: 60%;
  text-align: center;
  position: relative;
  z-index: -1; }
  .map-partners h2 {
    margin-top: 200px;
    font-size: 7.2rem;
    font-family: "gilroyextrabold";
    max-width: 10em;
    line-height: 1.2em;
    display: inline-block;
    color: #34363E;
    letter-spacing: -1.8px; }
    .map-partners h2::after {
      content: '';
      background: #34363E;
      display: block;
      height: 4px;
      width: 22px;
      margin: 34px auto 60px; }

.list-partners {
  text-align: center;
  position: relative; }
  .list-partners h2 {
    margin-top: 200px;
    font-size: 7.2rem;
    font-family: "gilroyextrabold";
    max-width: 10em;
    line-height: 1.2em;
    display: inline-block;
    color: #34363E;
    letter-spacing: -1.8px; }
    .list-partners h2::after {
      content: '';
      background: #34363E;
      display: block;
      height: 4px;
      width: 22px;
      margin: 34px auto 60px; }
  .list-partners .container .clogo {
    background: white;
    border: 1px solid #ededed;
    line-height: 383px;
    min-height: 383px;
    transform: scale(1.04);
    transition: all 0.3s; }
    .list-partners .container .clogo img.products {
      position: absolute;
      opacity: 0;
      transition: all 0.3s;
      transform: scale(0.6);
      left: 0;
      top: -30px; }
    .list-partners .container .clogo img.logos {
      transition: all 0.3s;
      transform: scale(0.5);
      vertical-align: middle; }
    .list-partners .container .clogo:hover {
      box-shadow: 0 2px 34px rgba(0, 0, 0, 0.08);
      z-index: 99;
      margin-top: -15px;
      margin-left: 5px;
      transform: scale(1.06); }
      .list-partners .container .clogo:hover img.logos {
        transform: scale(0.2);
        margin-bottom: -280px; }
      .list-partners .container .clogo:hover img.products {
        opacity: 1; }
    .list-partners .container .clogo h4 {
      font-size: 3.2rem;
      line-height: 4.2rem;
      font-family: "gilroyextrabold";
      width: 200px;
      display: inline-block;
      transform: translatey(-30px); }
      .list-partners .container .clogo h4::after {
        content: '';
        background: #34363E;
        display: block;
        height: 4px;
        width: 22px;
        margin: 34px auto 60px; }
    .list-partners .container .clogo.last {
      background: #F9F9F9; }
    .list-partners .container .clogo a {
      position: absolute;
      left: 50%;
      width: 190px;
      margin-left: -95px;
      clear: both;
      height: 51px;
      background: #239A87;
      color: white;
      font-family: "gilroyextrabold";
      display: inherit;
      line-height: 52px;
      bottom: 18%;
      border-radius: 30px; }

.pt-title {
  position: relative;
  height: 160px;
  line-height: 230px;
  text-align: center; }
  .pt-title h1 {
    font-size: 2.4rem;
    font-weight: 700; }
  @media only screen and (min-width: 768px) {
    .pt-title {
      line-height: 250px; } }
  @media only screen and (min-width: 1170px) {
    .pt-title {
      height: 200px;
      line-height: 300px; }
      .pt-title h1 {
        font-size: 3rem; } }

.pt-intro {
  width: 90%;
  max-width: 768px;
  text-align: center; }

.pt-intro {
  margin: 4em auto; }
  @media only screen and (min-width: 768px) {
    .pt-intro {
      margin: 5em auto; } }
  @media only screen and (min-width: 1170px) {
    .pt-intro {
      margin: 6em auto; } }

.pt-headline {
  font-size: 3rem;
  line-height: 1.2; }
  @media only screen and (min-width: 768px) {
    .pt-headline {
      font-size: 4.4rem;
      font-weight: 300; } }
  @media only screen and (min-width: 1170px) {
    .pt-headline {
      font-size: 6rem; } }

.pt-words-wrapper {
  display: inline-block;
  position: relative;
  text-align: center;
  margin-top: 3em; }
  .pt-words-wrapper b {
    display: inline-block;
    position: absolute;
    text-align: center;
    white-space: nowrap;
    font-family: "gilroyextrabold";
    font-size: 4.8rem;
    line-height: .8em;
    color: #239A87;
    left: 0;
    top: 0; }
    .pt-words-wrapper b span {
      font-size: 1.8rem;
      color: #34363E; }
    .pt-words-wrapper b.is-visible {
      position: relative; }
  .no-js .pt-words-wrapper b {
    opacity: 0; }
    .no-js .pt-words-wrapper b.is-visible {
      opacity: 1; }

.group {
  background: url(images/group.png) no-repeat center 80px;
  background-size: 320px;
  width: 100%; }

.group-pic {
  background: white;
  padding: 30px 0;
  margin-top: 420px !important; }

.products {
  padding: 8em 0 6em; }

.product-one {
  background: #00B9E5 url(images/pattern-white.png);
  background-size: 50%;
  margin-top: 10em;
  text-align: center; }
  .product-one aside,
  .product-one figure {
    text-align: left; }
    .product-one aside h3,
    .product-one figure h3 {
      color: white;
      font-size: 7.2rem;
      letter-spacing: -1.8px;
      line-height: 8.4rem;
      font-family: "gilroyextrabold";
      margin: 11rem; }
      .product-one aside h3::after,
      .product-one figure h3::after {
        content: '';
        background: white;
        display: block;
        height: 8px;
        width: 42px;
        margin: 34px 4px 60px; }
  .product-one aside {
    max-width: 46%; }
  .product-one figure {
    transform: translateY(-1%); }

.product-two {
  background: #FF96AC url(images/pattern-white.png);
  background-size: 50%;
  text-align: center;
  min-height: 820px; }
  .product-two aside,
  .product-two figure {
    text-align: left; }
    .product-two aside h3,
    .product-two figure h3 {
      color: white;
      font-size: 7.2rem;
      letter-spacing: -1.8px;
      line-height: 8.4rem;
      font-family: "gilroyextrabold";
      margin: 11rem; }
      .product-two aside h3::after,
      .product-two figure h3::after {
        content: '';
        background: white;
        display: block;
        height: 8px;
        width: 42px;
        margin: 34px 4px 60px; }
  .product-two aside {
    max-width: 46%; }
  .product-two figure {
    transform: translateY(16%); }

.product-three {
  background: #42D584 url(images/pattern-white.png);
  background-size: 50%;
  text-align: center;
  min-height: 820px; }
  .product-three aside,
  .product-three figure {
    text-align: left; }
    .product-three aside h3,
    .product-three figure h3 {
      min-width: 530px;
      color: white;
      font-size: 7.2rem;
      letter-spacing: -1.8px;
      line-height: 8.4rem;
      font-family: "gilroyextrabold";
      margin: 11rem; }
      .product-three aside h3::after,
      .product-three figure h3::after {
        content: '';
        background: white;
        display: block;
        height: 8px;
        width: 42px;
        margin: 34px 4px 60px; }
  .product-three aside {
    max-width: 46%; }

.product-four {
  background: #FDF49D url(images/pattern-dark.png);
  background-size: 50%;
  text-align: center;
  min-height: 820px; }
  .product-four aside,
  .product-four figure {
    text-align: left; }
    .product-four aside h3,
    .product-four figure h3 {
      min-width: 530px;
      color: #34363E;
      font-size: 7.2rem;
      letter-spacing: -1.8px;
      line-height: 8.4rem;
      font-family: "gilroyextrabold";
      margin: 11rem; }
      .product-four aside h3::after,
      .product-four figure h3::after {
        content: '';
        background: #34363E;
        display: block;
        height: 8px;
        width: 42px;
        margin: 34px 4px 60px; }
  .product-four aside {
    max-width: 46%; }
  .product-four figure {
    transform: translateY(18%); }

.whitebutton {
  background: white;
  font-size: 1.8rem;
  line-height: 2.9rem;
  color: #34363E;
  font-family: "gilroyextrabold";
  padding: 25px 40px;
  border-radius: 100px;
  margin: 11rem; }

.pt-headline.rotate-2 .pt-words-wrapper {
  perspective: 300px; }

.pt-headline.rotate-2 i, .pt-headline.rotate-2 em {
  display: inline-block;
  backface-visibility: hidden; }

.pt-headline.rotate-2 b {
  opacity: 0; }

.pt-headline.rotate-2 i {
  -ms-transform-style: preserve-3d;
  -o-transform-style: preserve-3d;
  transform-style: preserve-3d;
  transform: translateZ(-20px) rotateX(90deg);
  opacity: 0; }
  .is-visible .pt-headline.rotate-2 i {
    opacity: 1; }
  .pt-headline.rotate-2 i.in {
    animation: pt-rotate-2-in 0.4s forwards; }
  .pt-headline.rotate-2 i.out {
    animation: pt-rotate-2-out 0.4s forwards; }

.pt-headline.rotate-2 em {
  transform: translateZ(20px); }

.no-csstransitions .pt-headline.rotate-2 i {
  transform: rotateX(0deg);
  opacity: 0; }
  .no-csstransitions .pt-headline.rotate-2 i em {
    transform: scale(1); }

.no-csstransitions .pt-headline.rotate-2 .is-visible i {
  opacity: 1; }

@keyframes pt-rotate-2-in {
  0% {
    opacity: 0;
    transform: translateZ(-20px) rotateX(90deg); }
  60% {
    opacity: 1;
    transform: translateZ(-20px) rotateX(-10deg); }
  100% {
    opacity: 1;
    transform: translateZ(-20px) rotateX(0deg); } }

@keyframes pt-rotate-2-out {
  0% {
    opacity: 1;
    transform: translateZ(-20px) rotateX(0); }
  60% {
    opacity: 0;
    transform: translateZ(-20px) rotateX(-100deg); }
  100% {
    opacity: 0;
    transform: translateZ(-20px) rotateX(-90deg); } }

.pt-headline.clip span {
  display: inline-block;
  padding: .2em 0; }

.pt-headline.clip .pt-words-wrapper {
  overflow: hidden;
  vertical-align: top; }
  .pt-headline.clip .pt-words-wrapper::after {
    /* line */
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 2px;
    height: 100%; }

.pt-headline.clip b {
  opacity: 0; }
  .pt-headline.clip b.is-visible {
    opacity: 1; }

.news {
  margin-top: 12em; }

.owl-pagination {
  position: absolute;
  z-index: 100;
  left: 0;
  right: 0;
  bottom: 65px;
  text-align: center;
  -webkit-tap-highlight-color: transparent; }
  .owl-pagination .owl-page {
    display: inline-block; }
    .owl-pagination .owl-page span {
      width: 10px;
      height: 10px;
      margin: 0 3px;
      background: white;
      display: block;
      -webkit-backface-visibility: visible;
      transition: opacity 200ms ease;
      border-radius: 30px; }
    .owl-pagination .owl-page.active span {
      background: #239A87; }

.owl-carousel {
  position: relative;
  min-height: 840px;
  height: 100%;
  position: absolute;
  bottom: 0;
  top: 0;
  width: 20em;
  height: 8em;
  background: rgba(255, 255, 255, 0.5); }
  .owl-carousel .text {
    position: absolute;
    top: 300px;
    left: 300px; }
  .owl-carousel h3 {
    color: white;
    font-size: 4.8rem;
    line-height: 5.8rem;
    font-family: "gilroyextrabold";
    letter-spacing: -0.8px;
    margin-bottom: .5em; }
  .owl-carousel p {
    display: block;
    color: white;
    font-size: 1.8rem;
    line-height: 2.8rem;
    font-family: "gilroylight";
    letter-spacing: -0.8px;
    max-width: 500px; }
  .owl-carousel div:not(.owl-controls) {
    height: 100%; }
  .owl-carousel .owl-slide {
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center center; }
  .owl-carousel .owl-controls {
    position: absolute;
    left: 0;
    right: 0; }
    .owl-carousel .owl-controls .owl-buttons div {
      position: absolute;
      top: 0;
      bottom: 0;
      display: inline-block;
      zoom: 1;
      margin: 0;
      width: 50px;
      height: 30px;
      line-height: 25px;
      text-align: center;
      font-size: .9em;
      border-radius: 3px;
      color: #FFF;
      background: #000;
      opacity: .6;
      text-transform: capitalize; }
    .owl-carousel .owl-controls .owl-buttons .owl-prev {
      left: 5px; }
    .owl-carousel .owl-controls .owl-buttons .owl-next {
      right: 5px; }

footer {
  background: #239A87 url(images/pattern-light.png);
  background-size: 50%;
  min-height: 640px;
  margin: -200px; }
  footer.footer-small {
    margin: 0;
    min-height: 40px; }
    footer.footer-small.dark {
      background: #34363E;
      background-size: 50%; }
    footer.footer-small nav {
      padding-top: 10em; }
  footer .sc-fb:before,
  footer .sc-tw:before,
  footer .sc-in:before {
    content: '';
    width: 24px;
    height: 16px;
    display: inline-block;
    margin: 0 0 -3px; }
  footer .sc-fb:before {
    background: url(images/sc-fb.svg) no-repeat; }
  footer .sc-tw:before {
    background: url(images/sc-tw.svg) no-repeat; }
  footer .sc-in:before {
    background: url(images/sc-in.svg) no-repeat; }
  footer::after {
    margin-top: 133px;
    background: #34363E;
    content: '© 2016 PETEKPLASTIK, INC.';
    display: block;
    height: 30px;
    line-height: 30px;
    font-size: 11px;
    color: #afafaf;
    text-align: center; }
  footer h5 {
    font-family: "gilroyextrabold";
    color: white;
    margin-bottom: 16px; }
  footer a {
    color: white;
    margin-bottom: 16px; }
  footer p {
    color: white; }
  footer nav {
    padding-top: 20em; }

.rotate {
  position: absolute;
  right: 0;
  font-size: 11px;
  bottom: 20em;
  -webkit-transform: rotate(-90deg);
  -moz-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  -o-transform: rotate(-90deg);
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3); }
  .rotate strong {
    font-family: "gilroyextrabold"; }

.container .bar, footer .container .bar-first, footer .container .bar, footer .container .bar-last, .list-partners .container .clogo, .features aside, .product-one aside, .product-one figure, .product-two aside, .product-two figure, .product-three aside, .product-three figure, .product-four aside, .product-four figure, .features figure {
  margin-right: 0.52083%;
  margin-left: 0.52083%; }

.container .bar, footer .container .bar-first, footer .container .bar, footer .container .bar-last, .list-partners .container .clogo, .features aside, .product-one aside, .product-one figure, .product-two aside, .product-two figure, .product-three aside, .product-three figure, .product-four aside, .product-four figure, .features figure {
  padding-right: 0;
  padding-left: 0; }

.container, .list-partners .container, footer .container {
  margin: auto;
  max-width: 1280px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  box-sizing: border-box; }

.container .bar {
  -ms-flex: auto;
  flex: auto;
  box-sizing: border-box; }

footer .container .bar-first {
  width: 7.29167%;
  box-sizing: border-box; }

footer .container .bar {
  width: 15.62501%;
  box-sizing: border-box; }

footer .container .bar-last {
  width: 23.95834%;
  box-sizing: border-box; }

.list-partners .container .clogo {
  width: 32.29167%;
  box-sizing: border-box; }

.features aside, .product-one aside, .product-one figure, .product-two aside, .product-two figure, .product-three aside, .product-three figure, .product-four aside, .product-four figure {
  width: 40.62501%;
  box-sizing: border-box; }

.features figure {
  width: 48.95834%;
  box-sizing: border-box; }

.features figure {
  margin-left: 8.85416%; }

.product-one figure, .product-two figure, .product-three figure, .product-four figure {
  margin-left: 17.1875%; }

.hero {
  -ms-flex-align: center;
  align-items: center;
  -ms-flex-line-pack: center;
  align-content: center; }

/*# sourceMappingURL=data:application/json;base64, */

/*# sourceMappingURL=data:application/json;base64, */
