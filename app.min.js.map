{"version":3,"sources":["node_modules/browser-pack/_prelude.js","source/js/app.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$(document).ready(function () {\n  if (!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n    var s = skrollr.init({forceHeight: false});\n  }\n\n  $('.sticky-title-container').hover(\n    function () {\n      $(this).css({\n        'width': '240px'\n      });\n    },\n    function () {\n      $(this).css({\n        'width': '60px'\n      });\n    }\n  );\n\n  $('.title').on('click', function () {\n    var href = $(this).attr('href');\n    $('body, HTML').animate({\n      scrollTop: $(href).offset().top\n    }, 500);\n  });\n});\n\n\nvar dribbbleShots,\n   dribbbleToken  = 'da8f6bcdd2a1036d31bec665ece589a710495870ee2c7b7e6ba690bbc35fe176',\n   dribbbleUser   = 'mustafacetin';\n\n$.jribbble.setToken(dribbbleToken);\n\n// get total shots\n$.jribbble.users(dribbbleUser).then(function(user) {\n  dribbbleShots = user.shots_count;\n  console.log(dribbbleUser + ' has ' + dribbbleShots + ' shots');\n  fetchDribbble();\n});\n\n// fetch all shots\nfunction fetchDribbble(){\n  $.jribbble.users(dribbbleUser).shots({per_page: 8}).then(function(shots) {\n    var html = [];\n    //console.log(shots);\n    \n    shots.forEach(function(shot, i) {\n      var id                = shot.id,\n          image_hidpi       = shot.images.hidpi,\n          image_normal      = shot.images.normal,\n          image_teaser      = shot.images.teaser,\n          title             = shot.title,\n          url               = shot.html_url,\n          myDelay           = i*60+'ms';\n      \n      console.log(i, title, id, url, title, myDelay);\n      \n      html += '<li style=\"transition-delay:' + myDelay + '; -webkit-transition-delay:' + myDelay + '\">';\n      html +=   '<a href=\"' + url + '\" target=\"_blank\">';\n      html +=     '<div class=\"info flex-it flex-align-item-end\">';\n      html +=       '<div class=\"details flex-it flex-align-item-center flex-justify-between\">';\n      html +=         '<h2 class=\"title\">' + title + '</h2>';\n      html +=       '</div>';\n      html +=     '</div>';\n      html +=     '<img src=\"' + image_hidpi + '\" alt=\"' + title + '\" />';\n      html +=   '</a>';\n      html += '</li>';\n    });\n    \n    console.log('DONE CREATING ELEMENTS');\n    $('.dribbble ul').html(html);\n    killLoader();\n  });\n}\n\nfunction showDribbble(){\n  $('.dribbble').addClass('visible').removeClass('loading');\n}\n\n// KILL LOADER FN\nfunction killLoader(){\n  setTimeout(function(){\n    console.log('KILL LOADER');\n    $('.dribbble').removeClass('loading');\n    showDribbble();\n  },1000);\n}\n"]}